# Generated by Django 3.0 on 2019-12-26 12:18

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('contents', models.CharField(max_length=300)),
                ('author', models.CharField(max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('tag', models.CharField(max_length=140)),
                ('goodVote', models.IntegerField(default=0)),
                ('badVote', models.IntegerField(default=0)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteUser', models.CharField(max_length=20)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='board.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.CharField(max_length=300)),
                ('author', models.CharField(max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='board.Board')),
            ],
        ),
    ]
